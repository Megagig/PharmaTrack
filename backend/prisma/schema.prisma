generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String    @id @default(uuid())
  email      String    @unique
  password   String
  role       UserRole
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  pharmacyId String?
  pharmacy   Pharmacy? @relation(fields: [pharmacyId], references: [id])

  @@map("users")
}

model Pharmacy {
  id                 String   @id @default(uuid())
  name               String
  pharmacistInCharge String
  pcnLicenseNumber   String   @unique
  phoneNumber        String
  email              String?
  address            String
  ward               String
  lga                String
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  reports            Report[]
  users              User[]

  @@map("pharmacies")
}

model Report {
  id                          String   @id @default(uuid())
  reportDate                  DateTime
  patientsServed              Int
  maleCount                   Int?
  femaleCount                 Int?
  childrenCount               Int?
  adultCount                  Int?
  elderlyCount                Int?
  topMedications              String[]
  commonAilments              String[]
  adverseDrugReactions        Int
  adverseReactionDetails      String?
  referralsMade               Int
  immunizationsGiven          Int?
  healthEducationSessions     Int?
  bpChecks                    Int?
  expiredDrugs                Boolean?
  stockouts                   Boolean?
  supplyDelays                Boolean?
  notes                       String?

  // Service Delivery Data
  prescriptionsFilled         Int?
  otcConsultations            Int?
  mtmInterventions            Int?

  // Economic Contribution
  monthlyRevenue              Float?
  staffPharmacists            Int?
  staffTechnicians            Int?
  staffOthers                 Int?
  taxesPaid                   Float?
  localSuppliersCount         Int?

  // Challenges and Barriers
  regulatoryComplianceCost    Float?
  hasSubsidizedMedicines      Boolean?
  insuranceInclusionIssues    Boolean?
  fakeOrSubstandardDrugs      Int?
  rejectedInsuranceClaims     Int?

  // Public Health Role
  publicHealthPartnerships    String[]

  // Technology and Digital Adoption
  usesElectronicRecords       Boolean?
  usesMobileHealth            Boolean?
  usesInventoryManagement     Boolean?

  // Community Feedback
  patientSatisfactionScore    Float?
  timeComparedToHospital      Int?  // Time saved in minutes

  createdAt                   DateTime @default(now())
  updatedAt                   DateTime @updatedAt
  pharmacyId                  String
  pharmacy                    Pharmacy @relation(fields: [pharmacyId], references: [id])

  @@map("reports")
}

enum UserRole {
  PHARMACY
  EXECUTIVE
  ADMIN
}
